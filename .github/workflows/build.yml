name: ParetoFront

on:
  push:
    paths-ignore:
      - '**.md'
      - 'README.md'
      - '.github/**'
      - '!.github/workflows/build.yml'
      - 'documentation/**'
      - '.clang-format'
      - '.gitignore'
      - 'LICENSE'
  pull_request:
    paths-ignore:
      - '**.md'
      - 'README.md'
      - '.github/**'
      - '!.github/workflows/build.yml'
      - 'documentation/**'
      - '.clang-format'
      - '.gitignore'
      - 'LICENSE'

jobs:
  Build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Windows/Static/X64/Release",
            os: windows-2019,
            config: Release,
            args: -G "Visual Studio 16 2019" -A x64,
            sudocmd: "",
            artifact_name: "Windows",
          }
          - {
            name: "Linux/Static/X64/Release",
            os: ubuntu-18.04,
            config: Release,
            args: "-DCMAKE_C_COMPILER=/usr/bin/gcc-8 -DCMAKE_CXX_COMPILER=/usr/bin/g++-8",
            sudocmd: "sudo",
            artifact_name: "Linux",
          }
          - {
            name: "MacOSX/Static/X64/Release",
            os: macos-10.15,
            config: Release,
            args: "",
            sudocmd: "sudo",
            artifact_name: "MacOSX",
          }
    steps:
      - uses: actions/checkout@v2
      - name: Create Work Dir
        run: mkdir build
      - name: Configure for pull_request
        if: github.event_name == 'pull_request'
        working-directory: ./build
        run: |
          cmake .. ${{ matrix.config.args }} -DCMAKE_BUILD_TYPE=${{ matrix.config.config }} -DBUILD_LONG_TESTS=ON -DMAX_NUM_DIMENSIONS_PYTHON=3 -DBUILD_BINDING_FOR_ALL_STRUCTURES=ON
      - name: Configure for push
        if: github.event_name == 'push'
        working-directory: ./build
        run: |
          cmake .. ${{ matrix.config.args }} -DCMAKE_BUILD_TYPE=${{ matrix.config.config }} -DBUILD_LONG_TESTS=ON -DMAX_NUM_DIMENSIONS_PYTHON=10 -DBUILD_BINDING_FOR_ALL_STRUCTURES=ON
      - name: Build
        working-directory: ./build
        run: cmake --build . -j 2 --config ${{ matrix.config.config }}
      - name: Test
        working-directory: ./build
        run: ctest -j 2 -C Release
      - name: Install
        working-directory: ./build
        run: ${{ matrix.config.sudocmd }} cmake --install .
      - name: Create packages
        working-directory: ./build
        run: ${{ matrix.config.sudocmd }} cpack
        continue-on-error: true
      - name: Archive Python Binding
        uses: actions/upload-artifact@v2
        with:
          name: Python Binary ${{ matrix.config.artifact_name }}
          path: build/bindings/pyfront.cp*-*.*
      - name: Archive Installers
        uses: actions/upload-artifact@v2
        with:
          name: Binary Packages ${{ matrix.config.artifact_name }}
          path: build/pareto-front-1.?.?-*.*
      - name: Archive Installers as is
        uses: kittaakos/upload-artifact-as-is@v0
        with:
          path: build/pareto-front-1.?.?-*.*
